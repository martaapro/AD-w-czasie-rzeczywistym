import requests
import pandas as pd
#za≈Çadowanie url
url='http://api.citybik.es/v2/networks/velib'
response=requests.get(url)
#Sprawdzenie odpowiedzi z url
if response.status_code != 200:
    print("Request failed. Status code:", response.status_code)
else:
    data = response.json()

#Ekstra detale
    stations = data['network']['stations']

#listy na dane
last_updated=[]
name = []
latitudes = []
longitudes = []
num_empty_slots_list = []
num_free_bike_list = []
e_bikes = []
payment_terminal = []
banking = []
renting = []
returning = []

#dodanie danych do list
for station in stations:
    name.append(station['name'])
    latitudes.append(station['latitude'])
    longitudes.append(station['longitude'])
    num_empty_slots_list.append(station.get('empty_slots', 0))
    num_free_bike_list.append(station.get('free_bikes', 0))
    e_bikes.append(station['extra'].get('ebikes', 0))
    payment_terminal.append(station['extra'].get('payment-terminal', False))
    banking.append(station['extra'].get('banking', False))
    renting.append(station['extra'].get('renting', 0))
    returning.append(station['extra'].get('returning', 0))
    last_updated.append(station.get('returning', 0))

#Utworzenie ramki danych
df = pd.DataFrame({
        'Station Name': name,
        'Latitude': latitudes,
        'Longitude': longitudes,
        'Number of empty slots': num_empty_slots_list,
        'Number of free bikes': num_free_bike_list,
        'Number of e-bikes': e_bikes,
        'Payment terminal': payment_terminal,
        'Banking': banking,
        'Now renting': renting,
        'Now returning': returning,
    })

df
